@using MechAppProject.DBModule
@model MechAppProject.Models.AddEventModel

@{
    ViewBag.Title = "AddEvent";
}

    <div class="container navspace">
        <div class="card shadow">
            <div class="card-body">
                <div class="row">
                    <div class="col">


<h2>Zarezerwuj termin</h2>

@using (Html.BeginForm("AddEvent", "Events", FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(x => x.CustomerCarsSelectList)
        @Html.DropDownListFor(x => x.CustomerCar.Value, Model.CustomerCarsSelectList, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.WorkshopServicesSelectList)
        @Html.DropDownListFor(x => x.WorkshopService.Value, Model.WorkshopServicesSelectList, new { @class = "form-control" })

    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.ServiceDate)
        @Html.TextBoxFor(x => x.ServiceDate, new { @Value = "dd/mm/yy", @class = "form-control datepicker" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.ServiceHourSelectList)
        @Html.DropDownListFor(x => x.ServiceHours.Value, Model.ServiceHourSelectList, new { @class = "form-control" })
    </div>

    <a class="btn btn-primary" data-toggle="modal" data-target="#reservationModal" href="">Zarezerwuj</a>

    <div class="modal fade" id="reservationModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Potwierdzenie</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">Czy napewno chcesz wybrać ten termin?</div>
                <div class="modal-footer">

                    <button class="btn btn-primary" type="submit" href="@Url.Action("DisplayCustomerEvents","Events")">Zarezerwuj</button>

                    <button class="btn btn-secondary" type="button" data-dismiss="modal">Wróć</button>
                </div>
            </div>
        </div>
    </div>
}


<div class="card text-center mt-3">
    <h5 class="card-header">Kalendarz warstatu</h5>
    <div class="card-body">
        <div class="row justify-content-center">
            <div class="mt-3 col event-calendar" id="event-calendar-id"></div>
        </div>
    </div>
</div>






<script>
                        var calendarEvents = [];

                        $(function () {
                            $(function () { // will trigger when the document is ready
                                $('.datepicker').datepicker({
                                    getDate: '20.20.20',
                                    dateFormat: 'dd/mm/yy',
                                    minDate: 1,
                                    firstDay: 1,
                                    constrainInput: true,
                                    defaultDate: +1,
                                    currentText: "Now",
                                    gotoCurrent: true,
                                    maxDate: "+3m",
                                    dayNamesMin: ["Nd", "Pn", "Wt", "Sr", "Cz", "Pt", "So"],
                                    monthNames: [ "Styczeń", "Luty", "Marzec", "Kwiecien", "Maj", "Czerwiec", "Lipiec", "Sierpien", "Wrzesien", "Pazdziernik", "Listopad", "Grudzien" ],
                                    beforeShowDay: function(date) {
                                        var day = date.getDay();
                                        return [(day != 0), ''];
                                    }
                                    


                                }); //Initialise any date pickers

                                calendarEvents = @(Html.Raw(Json.Encode(Model.CalendarEventsJson)));

                                calendarEvents.forEach(function (entry) {
                                    entry.startDate = new Date(parseInt(entry.startDate.replace("/Date(", "").replace(")/",""), 10));
                                    entry.endDate = new Date(parseInt(entry.endDate.replace("/Date(", "").replace(")/",""), 10));
                                });

                                $('#event-calendar-id').simpleCalendar({
                                    disableEmptyDetails: true,
                                    events: calendarEvents,

                                    onDateSelect: function (date, events) {
                                        var eventsEl = $('.event-wrapper > .event');

                                        eventsEl.each(function (index) {
                                            var eventHour = $(this).find('.event-hour');

                                            var startMinutes = new Date(events[index].startDate).getMinutes();
                                            if (startMinutes < 10) {
                                                startMinutes = "0" + startMinutes.toString();
                                            }

                                            var startHours = new Date(events[index].startDate).getHours().toString() + ":" + startMinutes;

                                            var endMinutes = new Date(events[index].endDate).getMinutes();
                                            if (endMinutes < 10) {
                                                endMinutes = "0" + endMinutes.toString();
                                            }

                                            var endHours = new Date(events[index].endDate).getHours().toString() + ":" + endMinutes;

                                            eventHour.html(startHours + " - " + endHours);
                                        });
                                    }

                                });
                            });
                        });
                    </script>
                    
                    </div>
                </div>
            </div>
        </div>
    </div>


